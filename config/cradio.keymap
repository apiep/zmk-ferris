/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


&mt {
	//  flavor = "tap-preferred";
	 // tapping_term_ms = <200>;
};

/ {
	combos {
		compatible = "zmk,combos";
		combo_esc {
			timeout-ms = <50>;
			key-positions = <0 1>;
			bindings = <&kp ESC>;
		};

		combo_ralt {
			timeout-ms = <50>;
			key-positions = <17 16>;
			bindings = <&kp RALT>;
		};

		combo_lalt {
			timeout-ms = <50>;
			key-positions = <11 12>;
			bindings = <&kp LALT>;
		};

		combo_lgui {
			timeout-ms = <50>;
			key-positions = <12 13>;
			bindings = <&kp LGUI>;
		};


		combo_rgui {
			timeout-ms = <50>;
			key-positions = <17 18>;
			bindings = <&kp RGUI>;
		};
	};

	keymap {
		compatible = "zmk,keymap";

		layer_0 {
			bindings = <
				&kp Q				&kp W	&kp E	&kp R	&kp T		&kp Y	&kp U	&kp I			&kp O	&kp P
				&kp A				&kp S	&kp D	&kp F	&kp G		&kp H	&kp J	&kp K			&kp L	&kp QUOT
				&mt LSFT Z 	&kp X	&kp C	&kp V	&kp B		&kp N	&kp M	&kp CMMA	&kp DOT	&mt LSFT SLASH
										&lt 2 ESC	&kp RET							&kp SPC	&lt 1 BSPC
			>;
		};

		layer_1 {
			bindings = <
				&kp N1	&kp N2	&kp N3	&kp N4	&kp N5			&kp N6	&kp N7		&kp N8				&kp N9		&kp N0
				&kp F1	&kp F2	&kp F3	&kp F4	&kp F5			&kp F6	&kp MINUS	&kp EQUAL			&kp LBKT	&kp RBKT
				&kp F7	&kp F8	&kp F9	&kp F10	&kp F11			&kp F12	&kp TILDE	&kp BACKSLASH	&kp SEMI	&kp PG_DN
														&mo 3		&kp LGUI						&kp RGUI	&trans
			>;
		};

		layer_2 {
			bindings = <
				&kp LS(N1)	&kp LS(N2)	&kp LS(N3)	&kp LS(N4)	&kp LS(N5)			&kp LS(N6)	&kp LS(N7)		&kp LS(N8)	&kp LS(N9)	&kp LS(N0)
				&kp F1	&kp F2	&kp F3	&kp F4	&kp F5			&kp F6	&kp LS(MINUS)	&kp LS(EQUAL)			&kp LS(LBKT)	&kp LS(RBKT)
				&kp F7	&kp F8	&kp F9	&kp F10	&kp F11			&kp F12	&kp LS(TILDE)	&kp LS(BACKSLASH)	&kp LS(SEMI)	&kp LS(PG_DN)
															&trans &kp LCTL								&kp SPC  &mo 3
			>;
		};

		layer_3 {
			bindings = <
				&bootloader	&trans	&trans	&trans	&trans							&bootloader	&trans	&trans	&trans	&trans
				&reset 			&trans	&trans	&trans	&trans  						&trans	&trans	&trans	&trans	&trans
				&bt BT_CLR	&bt BT_NXT	&bt BT_PRV	&trans 	&trans		  &trans	&trans	&trans	&trans	&trans
																				&trans	&trans			  		&trans	&trans
			>;
		};

	};
};
